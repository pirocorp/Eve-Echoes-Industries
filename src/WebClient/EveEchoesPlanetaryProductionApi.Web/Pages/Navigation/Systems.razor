@page "/navigation/systems"
@page "/navigation/systems/page/{PageNumber:int}"

@using EveEchoesPlanetaryProductionApi.Api.Models.SolarSystems.GetSystems
@using EveEchoesPlanetaryProductionApi.Common
@using EveEchoesPlanetaryProductionApi.Web.Services

@inherits PaginationBase

@inject IEveApiService eveApiService
@inject IAppDataService appDataService
@inject NavigationManager navigation

@if (this.AllSystems is not null)
{
    <ListingTableComponent Data="(this.AllSystems)" Location=@("systems")></ListingTableComponent>

    <Paginator Page="@(this.PageNumber)"
               TotalPages="@this.TotalPages"
               Radius="3"
               SelectedPage="this.ChangePage" />
}
else
{
    <Loader></Loader>
}

@code {

    private IEnumerable<SolarSystemListingModel> AllSystems { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.NavigationManager = this.navigation;
        this.Location = "navigation/systems/page";

        await base.OnInitializedAsync();
    }

    protected override async Task LoadData()
    {
        await this.ClearPage();

        this.AllSystems = await this.eveApiService.Systems.GetPageAsync(this.PageNumber);

        var totalSystems = this.appDataService.SolarSystemCount ?? await this.eveApiService.Systems.GetCountAsync();
        this.appDataService.SolarSystemCount ??= totalSystems;

        this.TotalPages = (int)Math.Ceiling(totalSystems / (double)GlobalConstants.Ui.RegionsPageSize);
    }

    private async Task ClearPage()
    {
        this.AllSystems = null;

        await Task.Delay(1);
    }
}
