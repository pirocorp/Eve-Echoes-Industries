@page "/resources/region/"
@page "/resources/region/{RegionId:long}"

@using EveEchoesPlanetaryProductionApi.Api.Models.Regions.GetSimpleDetails
@using EveEchoesPlanetaryProductionApi.Common
@using EveEchoesPlanetaryProductionApi.Services.Data.Models
@using EveEchoesPlanetaryProductionApi.Services.Models.EveEchoesMarket
@using EveEchoesPlanetaryProductionApi.Web.Services

@inherits BestBase<BestResourceServiceModel>

@inject IEveApiService eveApiService;
@inject NavigationManager navigationManager;
@inject IAppDataService appDataService;

<h4 class="card-title">Region: @this.RegionDetails?.Name</h4>

<div class="row">
    <div class="col-md-5 offset-md-1">
        <PriceSelectorComponent OnChange="this.OnPriceSelectorChangeHandler"></PriceSelectorComponent>
    </div>
</div>

@if (this.PriceSelector is PriceSelector.UserProvided)
{
    <InputPrices OnChange="this.OnInputPriceChangeHandler"></InputPrices>
}

@if (this.BestItems is not null)
{
    <h2 class="card-title my-4">Best Resources In Region</h2>
    <ListingTableComponent Data="this.BestItems.Select(x => new {Name = x.System, Id = x.SystemId, x.Planet, x.Item, x.Output, x.Price, Value = x.ResourceValue})" Location="systems"></ListingTableComponent>

    <Paginator Page="@(this.PageNumber)"
               TotalPages="@this.TotalPages"
               Radius="3"
               SelectedPage="this.ChangePage" />
}
else
{
    if (this.ShowLoader)
    {
        <Loader></Loader>
    }
}

@code {
    [Parameter]
    public long RegionId { get; set; }

    private RegionSimpleDetailsModel RegionDetails { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.RegionId = this.RegionId == 0 ? this.appDataService.CurrentSolarSystem?.RegionId ?? 0 : this.RegionId;

        if (this.RegionId <= 0)
        {
            this.navigationManager.NavigateTo("/");
            return;
        }

        this.MiningPlanets = 1;
        this.navigationManager.NavigateTo($"/resources/region");

        this.RegionDetails = await this.eveApiService.Regions.GetSimpleDetailsAsync(this.RegionId);
    }

    protected override async Task LoadData()
    {
        await this.ClearPage();

        this.CreateInputModelFromUserInput();

        var model = (await this.eveApiService.PlanetaryResources.GetBestResourcesInRegion(this.RegionId, this.UserInput));

        this.BestItems = model.Resources;
        var count = model.Count;

        this.TotalPages = (int)Math.Ceiling(count / (double)GlobalConstants.Ui.BestResourcesPageSize);

        this.StateHasChanged();
    }
}
