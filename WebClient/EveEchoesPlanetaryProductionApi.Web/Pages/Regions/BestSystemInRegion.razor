@page "/region/best"
@page "/region/best/{RegionId:long}"

@using EveEchoesPlanetaryProductionApi.Api.Models.BestSystemModel 
@using EveEchoesPlanetaryProductionApi.Api.Models.Regions.GetSimpleDetails
@using EveEchoesPlanetaryProductionApi.Common
@using EveEchoesPlanetaryProductionApi.Services.Models.EveEchoesMarket
@using EveEchoesPlanetaryProductionApi.Web.Services

@inherits BestBase<BestSystemModel>

@inject IEveApiService eveApiService;
@inject NavigationManager navigationManager;
@inject IJSRuntime JS;

<div class="container">
    <section class="row">
        <SystemCardComponent>
            <h3 class="card-title">Region: @this.RegionDetails?.Name</h3>

            <div class="row">
                <div class="col-md-5 offset-md-1">
                    <PriceSelectorComponent OnChange="this.OnPriceSelectorChangeHandler"></PriceSelectorComponent>
                </div>
                <div class="col-md-5 align-self-center">
                    <SelectComponent Label="Colonies" Range="GlobalConstants.Ui.MaxColonies" OnChange="this.OnPlanetsChangeHandler"></SelectComponent>
                </div>
            </div>

            @if (this.PriceSelector is PriceSelector.UserProvided)
            {
                <InputPrices OnChange="this.OnInputPriceChangeHandler"></InputPrices>
            }
            
            @if (this.BestItems is not null)
            {
                <h2 class="card-title my-4">Best Systems In Region</h2>
                <AccordionSystemsComponent Systems="this.BestItems"></AccordionSystemsComponent>

                <Paginator Page="@(this.PageNumber)"
                           TotalPages="@this.TotalPages"
                           Radius="3"
                           SelectedPage="this.ChangePage" />
            }
            else
            {
                if (this.ShowLoader)
                {
                    <Loader></Loader>
                }
            }
        </SystemCardComponent>
    </section>
</div>

@code {

    [Parameter]
    public long RegionId { get; set; }

    private RegionSimpleDetailsModel RegionDetails { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.RegionId = this.RegionId == 0 ? this.AppDataService.CurrentSolarSystem?.RegionId ?? 0 : this.RegionId;

        if (this.RegionId <= 0)
        {
            this.navigationManager.NavigateTo("/404");
            return;
        }

        this.navigationManager.NavigateTo($"/region/best/{this.RegionId}");

        this.RegionDetails = await this.eveApiService.Regions.GetSimpleDetailsAsync(this.RegionId);
    }

    protected override async Task LoadData()
    {
        this.CreateInputModelFromUserInput();

        var model = (await this.eveApiService.Regions.GetBestSystemsInRegion(this.RegionId, this.UserInput));

        this.BestItems = model.Systems;
        var count = model.Count;

        this.StateHasChanged();
        await this.JS.InvokeAsync<Task>("addAccordionOnClickHandlers");

        this.TotalPages = (int)Math.Ceiling(count / (double)GlobalConstants.Ui.BestSystemResultsSize);
    }
}
