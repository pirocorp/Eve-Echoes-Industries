@page "/best"
@page "/best/{SolarSystemId:long}"

@using EveEchoesPlanetaryProductionApi.Services.Data.Models.SolarSystems.GetSolarSystemById
@using EveEchoesPlanetaryProductionApi.Services.Data.Models.SolarSystemServiceModel
@using EveEchoesPlanetaryProductionApi.Web.Services
@using EveEchoesPlanetaryProductionApi.Web.Components.SolarSystems
@using EveEchoesPlanetaryProductionApi.Web.Components.Loaders

@inject IAppDataService AppDataService;
@inject IEveApiService eveApiService;
@inject NavigationManager navigationManager;

<div class="container">
    <div class="row">
        @if (this.SolarSystem is null)
        {
            <Loader></Loader>
        }
        else
        {
            <SolarSystemBest SolarSystem="this.SolarSystem"></SolarSystemBest>
        }
    </div>
</div>

@code {
    [Parameter]
    public long SolarSystemId { get; set; }

    private SolarSystemServiceModel SolarSystem { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (this.SolarSystemId <= 0)
        {
            this.SolarSystem = this.AppDataService.CurrentSolarSystem ?? await this.eveApiService.Systems.GetRandomAsync();
            this.AppDataService.CurrentSolarSystem ??= this.SolarSystem;
        }
        else
        {
            this.SolarSystem = await this.eveApiService.Systems.GetAsync(this.SolarSystemId);
            this.AppDataService.CurrentSolarSystem = this.SolarSystem;
        }

        this.navigationManager.NavigateTo($"/best/{this.SolarSystem.Id}");
        await base.OnInitializedAsync();
    }
}
