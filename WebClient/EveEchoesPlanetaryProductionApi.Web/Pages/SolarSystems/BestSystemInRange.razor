@page "/range/best"
@page "/range/best/{SystemId:long}"

@using EveEchoesPlanetaryProductionApi.Common
@using EveEchoesPlanetaryProductionApi.Web.Services
@using EveEchoesPlanetaryProductionApi.Services.Models.EveEchoesMarket

@inherits BestSystemBase

@inject IEveApiService eveApiService;
@inject NavigationManager navigationManager;
@inject IJSRuntime JS;

<div class="container">
    <section class="row">
        <SystemCardComponent>
            <h2>Best Systems In Range Of System: @this.SystemName</h2>
            @if (this.Range > 0)
            {
                <h3 class="card-title">Range: @this.Range</h3>
            }

            <div class="row">
                <div class="col-md-5 offset-md-1">
                    <PriceSelectorComponent OnChange="this.OnPriceSelectorChangeHandler"></PriceSelectorComponent>
                </div>
                <div class="col-md-5 align-self-center">
                    <SelectComponent Label="Colonies" Range="GlobalConstants.Ui.MaxColonies" OnChange="this.OnPlanetsChangeHandler"></SelectComponent>
                    <SelectComponent Label="Range" Start="2" Range="GlobalConstants.MaxSearchRange" OnChange="this.OnRangeChangeHandler"></SelectComponent>
                </div>
            </div>

            @if (this.PriceSelector is PriceSelector.UserProvided)
            {
                <InputPrices OnChange="this.OnInputPriceChangeHandler"></InputPrices>
            }

            @if (this.BestSystems is not null)
            {
                <h2 class="card-title my-4">Best Systems In Range</h2>
                <AccordionSystemsComponent Systems="this.BestSystems"></AccordionSystemsComponent>

                <Paginator Page="@(this.PageNumber)"
                           TotalPages="@this.TotalPages"
                           Radius="3"
                           SelectedPage="this.ChangePage" />
            }
            else
            {
                if (this.ShowLoader)
                {
                    <Loader></Loader>
                }
            }
        </SystemCardComponent>
    </section>
</div>

@code {
    [Parameter]
    public long SystemId { get; set; }

    private int Range { get; set; }

    public string SystemName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.SystemId = this.SystemId == 0 ? this.AppDataService.CurrentSolarSystem?.Id ?? 0 : this.SystemId;

        if (this.SystemId <= 0)
        {
            this.navigationManager.NavigateTo("/404");
            return;
        }

        this.navigationManager.NavigateTo($"/range/best/{this.SystemId}");

        this.SystemName = (await this.eveApiService.Systems.GetSolarSystemSimpleDetails(this.SystemId)).Name;
    }

    protected override async Task LoadData()
    {
        this.CreateInputModelFromUserInput();

        if (this.Range <= 0)
        {
            return;
        }

        var model = (await this.eveApiService.Systems.GetBestSystemsInRange(this.Range, this.SystemId, this.UserInput));

        this.BestSystems = model.Systems;
        var count = model.Count;

        this.StateHasChanged();
        await this.JS.InvokeAsync<Task>("addAccordionOnClickHandlers");

        this.TotalPages = (int)Math.Ceiling(count / (double)GlobalConstants.Ui.BestSystemResultsSize);
    }

    private async Task OnRangeChangeHandler(int range)
    {
        this.Range = range;

        await this.ValidateUserInput();
    }
}
