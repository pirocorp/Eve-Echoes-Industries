@page "/best/constellation"
@page "/best/constellation/{ConstellationId:long}"

@using EveEchoesPlanetaryProductionApi.Web.Components
@using EveEchoesPlanetaryProductionApi.Web.Components.Loaders
@using EveEchoesPlanetaryProductionApi.Api.Models.Constellations.BestSolarSystemsInConstellation
@using EveEchoesPlanetaryProductionApi.Api.Models.Constellations.GetSimpleDetails
@using EveEchoesPlanetaryProductionApi.Services.Data.Models
@using EveEchoesPlanetaryProductionApi.Services.Models.EveEchoesMarket
@using EveEchoesPlanetaryProductionApi.Web.Services

@inject IEveApiService eveApiService;
@inject IAppDataService appDataService;
@inject NavigationManager navigationManager;

<h3>Constellation</h3>

<div class="container">
    <div class="row">
        <div class="card text-center mx-auto" style="width: 100%">
            <div class="card-header">
                <ul class="nav nav-tabs card-header-tabs">
                    <li class="nav-item">
                        <NavLink class="nav-link" href=@($"details/") ActiveClass="active" Match="NavLinkMatch.All">Details</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link " href="@($"best/")" ActiveClass="active" Match="NavLinkMatch.All">Best In System</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link " href="@($"best/constellation")" ActiveClass="active" Match="NavLinkMatch.All">Best In Constellation</NavLink>
                    </li>
                </ul>
            </div>

            <div class="card-body">
                <h3 class="card-title">Constellation: @this.ConstellationDetails?.Name</h3>
                <h4 class="card-title">Region: @this.ConstellationDetails?.RegionName</h4>
                <PriceSelectorComponent OnChange="this.PriceSelectorChangeHandler"></PriceSelectorComponent>

                @if (this.PriceSelector is PriceSelector.UserProvided)
                {
                    <InputPrices OnChange="this.OnInputPriceChangeHandler"></InputPrices>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public long ConstellationId { get; set; }

    private BestConstellationModel BestSystems { get; set; }

    private PriceSelector PriceSelector { get; set; }

    public ConstellationSimpleDetailsModel ConstellationDetails { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.ConstellationId = this.ConstellationId == 0 ? this.appDataService.CurrentSolarSystem?.ConstellationId ?? 0 : this.ConstellationId;

        if (this.ConstellationId is 0)
        {
            this.navigationManager.NavigateTo("/404");
            return;
        }

        this.ConstellationDetails = await this.eveApiService.Constellations.GetSimpleDetailsAsync(this.ConstellationId);

        await base.OnInitializedAsync();
    }

    private void PriceSelectorChangeHandler(PriceSelector selector)
    {
        this.PriceSelector = selector;
    }

    private void OnInputPriceChangeHandler(bool change)
    {
        // TODO:
    }

    private async Task LoadData()
    {
        var model = new BestInputModel();

        this.BestSystems = await this.eveApiService.Constellations.GetBestSystemsInConstellation(this.ConstellationId, model);
    }
}
