@page "/constellations"
@page "/constellations/{PageNumber:int}"

@inherits AllBase

@using EveEchoesPlanetaryProductionApi.Api.Models.Constellations
@using EveEchoesPlanetaryProductionApi.Common
@using EveEchoesPlanetaryProductionApi.Web.Components
@using EveEchoesPlanetaryProductionApi.Web.Services

@inject IEveApiService eveApiService
@inject IAppDataService appDataService
@inject NavigationManager navigation

<section class="container mb-5">
    @if (this.Constellations is not null)
    {
        <table class="table-fill">
            <thead>
                <tr>
                    <th class="text-left">Constellation</th>
                    <th class="text-left">Solar Systems</th>
                    <th class="text-left">Planets</th>
                </tr>
            </thead>
            <tbody class="table-hover">
                @foreach (var constellation in this.Constellations)
                {
                    <tr>
                        <td class="text-left">
                            <a href=@($"/constellation/{constellation.Id}")>@constellation.Name</a>
                        </td>
                        <td class="text-left">@constellation.SolarSystemsCount</td>
                        <td class="text-left">@constellation.PlanetsCount</td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <Pagination Page="@(this.PageNumber)"
                TotalPages="@this.TotalPages"
                Radius="3"
                SelectedPage="this.ChangePage" />
</section>


@code {
    private IEnumerable<ConstellationListingModel> Constellations { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.NavigationManager = this.navigation;
        this.Location = "constellations";

        await base.OnInitializedAsync();
    }

    protected override async Task LoadData()
    {
        this.Constellations = await this.eveApiService.GetConstellationsPageAsync(this.PageNumber);

        var totalConstellations = this.appDataService.ConstellationsCount ?? await this.eveApiService.GetConstellationsCountAsync();
        this.appDataService.ConstellationsCount ??= totalConstellations;

        this.TotalPages = (int)Math.Ceiling(totalConstellations / (double)GlobalConstants.Ui.ConstellationsPageSize);
    }
}
